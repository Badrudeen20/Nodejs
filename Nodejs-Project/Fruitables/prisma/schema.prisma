// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}


model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique 
  email     String   @unique 
  password  String   
  role      String   
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  orders    Order[]
  shops     Shop[]
  @@map("users")
}


model Brand {
  id           Int      @id @default(autoincrement())
  name         String    
  status       String   @default("ACTIVE") 
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  products     Product[]
  @@map("bands")
}



model Product {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  search         String
  price          Float
  rating         Int            @default(0)
  status         String         @default("ACTIVE")
  image          String?
  description    String?        
  createdAt      DateTime       @default(now()) @map("created_at")
  updatedAt      DateTime       @updatedAt @map("updated_at")
  brand          Brand          @relation(fields: [brandId], references: [id])
  brandId        Int            @map("brand_id")
  categories     Category[]
  orders         Order[]
  @@map("products")
}

model Category {
  id          Int        @id @default(autoincrement())
  product     Product    @relation(fields: [productId], references: [id])
  productId   Int        @map("product_id") 
  additional  String     
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  @@map("categories")
}




model Order {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @map("user_id")
  cartId       String?  
  product      Product  @relation(fields: [productId], references: [id])
  productId    Int      @map("product_id")
  price        Float    
  discount     Float    @default(0)
  quantity     Int      @default(1)
  status       String   @default("CART")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  @@map("orders")
}




model Shop {
  id           Int      @id @default(autoincrement())
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @map("user_id")
  cartId       String   
  price        Float     
  discount     Float    @default(0)
  status       String   @default("PAYMADE")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  @@map("shops")
}




model Coupon {
  id           Int      @id @default(autoincrement())
  code         String   @unique
  discount     Float    @default(0)
  validity     DateTime?
  status       String   @default("ACTIVE")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  @@map("coupons")
}